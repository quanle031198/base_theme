import { InjectionToken, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export const TRANSLOCO_MISSING_HANDLER = new InjectionToken('TRANSLOCO_MISSING_HANDLER');
export class DefaultHandler {
    handle(key, config) {
        if (config.missingHandler.logMissingKey && !config.prodMode) {
            const msg = `Missing translation for '${key}'`;
            console.warn(`%c ${msg}`, 'font-size: 12px; color: red');
        }
        return key;
    }
}
DefaultHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: DefaultHandler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
DefaultHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: DefaultHandler });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: DefaultHandler, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsb2NvLW1pc3NpbmctaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNsb2NvL3NyYy9saWIvdHJhbnNsb2NvLW1pc3NpbmctaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFLM0QsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxjQUFjLENBQ3pELDJCQUEyQixDQUM1QixDQUFDO0FBV0YsTUFBTSxPQUFPLGNBQWM7SUFDekIsTUFBTSxDQUFDLEdBQVcsRUFBRSxNQUF1QjtRQUN6QyxJQUFJLE1BQU0sQ0FBQyxjQUFlLENBQUMsYUFBYSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUM1RCxNQUFNLEdBQUcsR0FBRyw0QkFBNEIsR0FBRyxHQUFHLENBQUM7WUFDL0MsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUFFLDZCQUE2QixDQUFDLENBQUM7U0FDMUQ7UUFFRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7OzJHQVJVLGNBQWM7K0dBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUQxQixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVHJhbnNsb2NvQ29uZmlnIH0gZnJvbSAnLi90cmFuc2xvY28uY29uZmlnJztcbmltcG9ydCB7IEhhc2hNYXAgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IFRSQU5TTE9DT19NSVNTSU5HX0hBTkRMRVIgPSBuZXcgSW5qZWN0aW9uVG9rZW4oXG4gICdUUkFOU0xPQ09fTUlTU0lOR19IQU5ETEVSJ1xuKTtcblxuZXhwb3J0IGludGVyZmFjZSBUcmFuc2xvY29NaXNzaW5nSGFuZGxlckRhdGEgZXh0ZW5kcyBUcmFuc2xvY29Db25maWcge1xuICBhY3RpdmVMYW5nOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNsb2NvTWlzc2luZ0hhbmRsZXIge1xuICBoYW5kbGUoa2V5OiBzdHJpbmcsIGRhdGE6IFRyYW5zbG9jb01pc3NpbmdIYW5kbGVyRGF0YSwgcGFyYW1zPzogSGFzaE1hcCk6IGFueTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERlZmF1bHRIYW5kbGVyIGltcGxlbWVudHMgVHJhbnNsb2NvTWlzc2luZ0hhbmRsZXIge1xuICBoYW5kbGUoa2V5OiBzdHJpbmcsIGNvbmZpZzogVHJhbnNsb2NvQ29uZmlnKSB7XG4gICAgaWYgKGNvbmZpZy5taXNzaW5nSGFuZGxlciEubG9nTWlzc2luZ0tleSAmJiAhY29uZmlnLnByb2RNb2RlKSB7XG4gICAgICBjb25zdCBtc2cgPSBgTWlzc2luZyB0cmFuc2xhdGlvbiBmb3IgJyR7a2V5fSdgO1xuICAgICAgY29uc29sZS53YXJuKGAlYyAke21zZ31gLCAnZm9udC1zaXplOiAxMnB4OyBjb2xvcjogcmVkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleTtcbiAgfVxufVxuIl19
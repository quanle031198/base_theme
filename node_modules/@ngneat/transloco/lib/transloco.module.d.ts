import { DefaultTranspiler } from './transloco.transpiler';
import { DefaultHandler } from './transloco-missing-handler';
import { DefaultInterceptor } from './transloco.interceptor';
import { DefaultFallbackStrategy } from './transloco-fallback-strategy';
import * as i0 from "@angular/core";
import * as i1 from "./transloco.directive";
import * as i2 from "./transloco.pipe";
import * as i3 from "./loader-component.component";
export declare const defaultProviders: ({
    provide: import("@angular/core").InjectionToken<unknown>;
    useClass: typeof DefaultTranspiler;
    deps: import("@angular/core").InjectionToken<import("./transloco.config").TranslocoConfig>[];
} | {
    provide: import("@angular/core").InjectionToken<unknown>;
    useClass: typeof DefaultHandler;
    deps?: undefined;
} | {
    provide: import("@angular/core").InjectionToken<unknown>;
    useClass: typeof DefaultInterceptor;
    deps?: undefined;
} | {
    provide: import("@angular/core").InjectionToken<import("./transloco-fallback-strategy").TranslocoFallbackStrategy>;
    useClass: typeof DefaultFallbackStrategy;
    deps: import("@angular/core").InjectionToken<import("./transloco.config").TranslocoConfig>[];
})[];
export declare class TranslocoModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<TranslocoModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<TranslocoModule, [typeof i1.TranslocoDirective, typeof i2.TranslocoPipe, typeof i3.TranslocoLoaderComponent], never, [typeof i1.TranslocoDirective, typeof i2.TranslocoPipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<TranslocoModule>;
}

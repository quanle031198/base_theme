{"version":3,"file":"ng-dynamic-breadcrumb.js","sources":["../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.service.ts","../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.component.ts","../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.component.html","../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.module.ts","../../../projects/ng-dynamic-breadcrumb/src/projects.ts","../../../projects/ng-dynamic-breadcrumb/src/ng-dynamic-breadcrumb.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgDynamicBreadcrumbService {\r\n\r\n  public breadcrumbLabels: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  public newBreadcrumb: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\r\n\r\n  constructor() { }\r\n\r\n  updateBreadcrumbLabels(labels: any) {\r\n    this.breadcrumbLabels.next(labels);\r\n  }\r\n\r\n  updateBreadcrumb(newBreadcrumb: Breadcrumb[]) {\r\n    this.newBreadcrumb.next(newBreadcrumb);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd, PRIMARY_OUTLET, RoutesRecognized } from '@angular/router';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { Breadcrumb } from './breadcrumb.model';\r\nimport { NgDynamicBreadcrumbService } from './ng-dynamic-breadcrumb.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'app-ng-dynamic-breadcrumb',\r\n  templateUrl: './ng-dynamic-breadcrumb.component.html',\r\n  styleUrls: ['./ng-dynamic-breadcrumb.component.css']\r\n})\r\nexport class NgDynamicBreadcrumbComponent implements OnInit {\r\n\r\n  breadcrumb: Breadcrumb[] = [];\r\n  @Input() bgColor = '#eee';\r\n  @Input() fontSize = '18px';\r\n  @Input() fontColor = '#0275d8';\r\n  @Input() lastLinkColor = '#000';\r\n  @Input() symbol = ' / ';\r\n  params: { [key: string]: any; };\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private ngDynamicBreadcrumbService: NgDynamicBreadcrumbService\r\n  ) {\r\n    this.breadCrumbData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngDynamicBreadcrumbService.breadcrumbLabels.subscribe((labelData) => {\r\n      for (const label in labelData) {\r\n        if (labelData.hasOwnProperty(label)) {\r\n          this.breadcrumb.map((crumb) => {\r\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\r\n            if (labelParams) {\r\n              for (const labelParam of labelParams) {\r\n                const dynamicData = labelData[label];\r\n                if (labelParam === label) {\r\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dynamicData);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.ngDynamicBreadcrumbService.newBreadcrumb.subscribe((breadcrumb: Breadcrumb[]) => {\r\n      if (breadcrumb.length > 0) {\r\n        this.updateData(this.activatedRoute, breadcrumb);\r\n      }\r\n    });\r\n  }\r\n  breadCrumbData(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .pipe(map(() => this.activatedRoute))\r\n      .pipe(map((route) => {\r\n        while (route.firstChild) { route = route.firstChild; }\r\n        return route;\r\n      }))\r\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\r\n      .subscribe(route => {\r\n        this.params = route.snapshot.params;\r\n        this.updateData(route, null);\r\n      });\r\n  }\r\n\r\n  private updateData(route, newBreadcrumb): void {\r\n    if (route.snapshot.data.breadcrumb || newBreadcrumb) {\r\n      const data = route.snapshot.data.breadcrumb ? route.snapshot.data.breadcrumb : newBreadcrumb;\r\n      const breadcrumb = (JSON.parse(JSON.stringify(data)));\r\n      breadcrumb.map((crumb) => {\r\n\r\n        const urlChunks = crumb.url.split('/');\r\n        for (const chunk of urlChunks) {\r\n          if (chunk.includes(':')) {\r\n            const paramID = chunk.replace(':', '');\r\n            // const routerParamID = route.snapshot.params[paramID];\r\n            const routerParamID = this.params[paramID];\r\n            crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\r\n          }\r\n        }\r\n\r\n        const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\r\n        if (labelParams) {\r\n          for (const labelParam of labelParams) {\r\n            // const routerParamID = route.snapshot.params[labelParam.trim()];\r\n            const routerParamID = this.params[labelParam.trim()];\r\n            if (routerParamID) {\r\n              crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\r\n            } else {\r\n              // crumb.label = crumb.label.replace('{{' + labelParam + '}}', '');\r\n            }\r\n          }\r\n        }\r\n\r\n      });\r\n      this.breadcrumb = breadcrumb;\r\n    } else {\r\n      this.breadcrumb = [];\r\n    }\r\n  }\r\n}\r\n\r\n","<ul class=\"custom-bread-crumb\" [ngStyle]=\"{'background-color': bgColor}\">\r\n  <span *ngFor=\"let item of breadcrumb; let i = index\">\r\n      <li [ngStyle]=\"{'font-size': fontSize}\">\r\n          <a *ngIf=\"item?.url\" [routerLink]=\"item?.url\" [ngStyle]=\"{'color': fontColor}\">{{ item.label }}</a>\r\n          <span *ngIf=\"!item?.url\" [ngStyle]=\"{'color': lastLinkColor}\">{{ item.label }}</span>\r\n          <span class=\"line\" *ngIf=\"breadcrumb.length !== i+1\">{{symbol}}</span>\r\n      </li>\r\n  </span>\r\n</ul>\r\n","import { NgModule } from '@angular/core';\r\nimport { NgDynamicBreadcrumbComponent } from './ng-dynamic-breadcrumb.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgDynamicBreadcrumbComponent],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule\r\n  ],\r\n  exports: [NgDynamicBreadcrumbComponent]\r\n})\r\nexport class NgDynamicBreadcrumbModule { }\r\n","/*\r\n * Public API Surface of ng-dynamic-breadcrumb\r\n */\r\n\r\nexport * from './lib/ng-dynamic-breadcrumb.service';\r\nexport * from './lib/ng-dynamic-breadcrumb.component';\r\nexport * from './lib/ng-dynamic-breadcrumb.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './projects';\n"],"names":[],"mappings":"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"}
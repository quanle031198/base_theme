{"version":3,"file":"ngx-quill.mjs","sources":["../../../projects/ngx-quill/src/lib/quill-defaults.ts","../../../projects/ngx-quill/src/lib/helpers.ts","../../../projects/ngx-quill/src/lib/quill-editor.interfaces.ts","../../../projects/ngx-quill/src/lib/quill.service.ts","../../../projects/ngx-quill/src/lib/quill-editor.component.ts","../../../projects/ngx-quill/src/lib/quill-view-html.component.ts","../../../projects/ngx-quill/src/lib/quill-view.component.ts","../../../projects/ngx-quill/src/lib/quill.module.ts","../../../projects/ngx-quill/src/public-api.ts","../../../projects/ngx-quill/src/ngx-quill.ts"],"sourcesContent":["export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import {QuillFormat} from './quill-editor.interfaces'\n\nexport const getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n","import { InjectionToken } from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface CustomModule {\n  implementation: any\n  path: string\n}\n\nexport type QuillToolbarConfig = Array<Array< string | {\n  indent?: string\n  list?: string\n  direction?: string\n  header?: number | Array<boolean | number>\n  color?: string[] | string\n  background?: string[] | string\n  align?: string[] | string\n  script?: string\n  font?: string[] | string\n  size?: Array<boolean | string>\n}\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    matchers?: any[]\n    matchVisual?: boolean\n  } | boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } | boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig | string | {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } | boolean\n}\n\nexport type QuillFormat = 'object' | 'json' | 'html' | 'text'\n\nexport interface QuillConfig {\n  bounds?: HTMLElement | string\n  customModules?: CustomModule[]\n  customOptions?: CustomOption[]\n  suppressGlobalRegisterWarning?: boolean\n  debug?: 'error' | 'warn' | 'log' | false\n  format?: QuillFormat\n  formats?: string[]\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement | string | null\n  theme?: string\n  strict?: boolean\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n  // provide default empty value\n  defaultEmptyValue?: any\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config', {\n  providedIn: 'root',\n  factory: () => ({ modules: defaultModules })\n})\n","import { DOCUMENT } from '@angular/common'\nimport { Injectable, Inject, Injector, Optional } from '@angular/core'\nimport { defer, Observable } from 'rxjs'\nimport { shareReplay } from 'rxjs/operators'\n\nimport { defaultModules } from './quill-defaults'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuillService {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private Quill!: any\n  private document: Document\n  private quill$: Observable<any> = defer(async () => {\n    if (!this.Quill) {\n      // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n      // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n      // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n      const maybePatchedAddEventListener = this.document.addEventListener\n      // There're 2 types of Angular applications:\n      // 1) zone-full (by default)\n      // 2) zone-less\n      // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n      // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n      // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n      // this means the `zone.js` is not imported.\n      // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n      // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener\n      const quillImport = await import('quill')\n      this.document.addEventListener = maybePatchedAddEventListener\n\n      this.Quill = (\n        quillImport.default ? quillImport.default : quillImport\n      ) as any\n    }\n\n    // Only register custom options and modules once\n    this.config.customOptions?.forEach((customOption) => {\n      const newCustomOption = this.Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      this.Quill.register(\n        newCustomOption,\n        true,\n        this.config.suppressGlobalRegisterWarning\n      )\n    })\n\n    this.config.customModules?.forEach(({ implementation, path }) => {\n      this.Quill.register(\n        path,\n        implementation,\n        this.config.suppressGlobalRegisterWarning\n      )\n    })\n\n    return this.Quill\n  }).pipe(shareReplay({ bufferSize: 1, refCount: true }))\n\n  constructor(\n    injector: Injector,\n    @Optional() @Inject(QUILL_CONFIG_TOKEN) public config: QuillConfig\n  ) {\n    this.document = injector.get(DOCUMENT)\n\n    if (!this.config) {\n      this.config = { modules: defaultModules }\n    }\n  }\n\n  getQuill() {\n    return this.quill$\n  }\n}\n","import { DOCUMENT, isPlatformServer } from '@angular/common'\nimport { DomSanitizer } from '@angular/platform-browser'\n\nimport { QuillModules, CustomOption, CustomModule } from './quill-editor.interfaces'\n\nimport QuillType, { Delta } from 'quill'\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\nimport { fromEvent, Subscription } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\n\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms'\nimport { defaultModules } from './quill-defaults'\n\nimport { getFormat } from './helpers'\nimport { QuillService } from './quill.service'\n\nexport interface Range {\n  index: number\n  length: number\n}\n\nexport interface ContentChange {\n  content: any\n  delta: Delta\n  editor: QuillType\n  html: string | null\n  oldDelta: Delta\n  source: string\n  text: string\n}\n\nexport interface SelectionChange {\n  editor: QuillType\n  oldRange: Range | null\n  range: Range | null\n  source: string\n}\n\nexport interface Blur {\n  editor: QuillType\n  source: string\n}\n\nexport interface Focus {\n  editor: QuillType\n  source: string\n}\n\nexport type EditorChangeContent = ContentChange & { event: 'text-change' }\nexport type EditorChangeSelection = SelectionChange & { event: 'selection-change' }\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class QuillEditorBase implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required = false\n  @Input() formats?: string[] | null\n  @Input() customToolbarPosition: 'top' | 'bottom' = 'top'\n  @Input() sanitize = false\n  @Input() styles: any = null\n  @Input() strict = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() customModules: CustomModule[] = []\n  @Input() trackChanges?: 'user' | 'all'\n  @Input() preserveWhitespace = false\n  @Input() classes?: string\n  @Input() trimOnValidation = false\n  @Input() linkPlaceholder?: string\n  @Input() compareValues = false\n  @Input() filterNull = false\n  @Input() debounceTime?: number\n  /*\n  https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n\n  provide default empty value\n  by default null\n\n  e.g. defaultEmptyValue=\"\" - empty string\n\n  <quill-editor\n    defaultEmptyValue=\"\"\n    formControlName=\"message\"\n  ></quill-editor>\n  */\n  @Input() defaultEmptyValue?: any = null\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onEditorChanged: EventEmitter<EditorChangeContent | EditorChangeSelection> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<ContentChange> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<SelectionChange> = new EventEmitter()\n  @Output() onFocus: EventEmitter<Focus> = new EventEmitter()\n  @Output() onBlur: EventEmitter<Blur> = new EventEmitter()\n\n  quillEditor!: QuillType\n  editorElem!: HTMLElement\n  content: any\n  disabled = false // used to store initial value before ViewInit\n\n  onModelChange: (modelValue?: any) => void\n  onModelTouched: () => void\n  onValidatorChanged: () => void\n\n  private document: Document\n  private subscription: Subscription | null = null\n  private quillSubscription: Subscription | null = null\n\n  constructor(\n    injector: Injector,\n    public elementRef: ElementRef,\n    protected cd: ChangeDetectorRef,\n    protected domSanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected renderer: Renderer2,\n    protected zone: NgZone,\n    protected service: QuillService\n  ) {\n    this.document = injector.get(DOCUMENT)\n  }\n\n  static normalizeClassNames(classes: string): string[] {\n    const classList = classes.trim().split(' ')\n    return classList.reduce((prev: string[], cur: string) => {\n      const trimmed = cur.trim()\n      if (trimmed) {\n        prev.push(trimmed)\n      }\n\n      return prev\n    }, [])\n  }\n\n  @Input()\n  valueGetter = (quillEditor: QuillType, editorElement: HTMLElement): string | any => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = this.defaultEmptyValue\n    }\n    let modelValue: string | Delta | null = html\n    const format = getFormat(this.format, this.service.config.format)\n\n    if (format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: QuillType, value: any): any => {\n    const format = getFormat(this.format, this.service.config.format)\n    if (format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n\n    // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n    // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      this.elementRef.nativeElement.insertAdjacentHTML(\n        this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\n        this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>'\n      )\n\n      this.editorElem = this.elementRef.nativeElement.querySelector(\n        '[quill-editor-element]'\n      )\n\n      const toolbarElem = this.elementRef.nativeElement.querySelector(\n        '[quill-editor-toolbar]'\n      )\n      const modules = Object.assign({}, this.modules || this.service.config.modules)\n\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar\n      }\n\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...'\n      }\n\n      if (this.styles) {\n        Object.keys(this.styles).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n\n      if (this.classes) {\n        this.addClasses(this.classes)\n      }\n\n      this.customOptions.forEach((customOption) => {\n        const newCustomOption = Quill.import(customOption.import)\n        newCustomOption.whitelist = customOption.whitelist\n        Quill.register(newCustomOption, true)\n      })\n\n      this.customModules.forEach(({ implementation, path }) => {\n        Quill.register(path, implementation)\n      })\n\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body\n      }\n\n      let debug = this.debug\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug\n      }\n\n      let readOnly = this.readOnly\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false\n      }\n\n      let defaultEmptyValue = this.defaultEmptyValue\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue\n      }\n\n      let scrollingContainer = this.scrollingContainer\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer =\n          this.service.config.scrollingContainer === null\n            || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null\n      }\n\n      let formats = this.formats\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined)\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug as any,\n          formats: formats as any,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer as any,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        })\n\n        // Set optional link placeholder, Quill has no native API for it so using workaround\n        if (this.linkPlaceholder) {\n          const tooltip = (this.quillEditor as any)?.theme?.tooltip\n          const input = tooltip?.root?.querySelector('input[data-link]')\n          if (input?.dataset) {\n            input.dataset.link = this.linkPlaceholder\n          }\n        }\n      })\n\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format)\n\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent')\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content)\n          this.quillEditor.setContents(newValue, 'silent')\n        }\n\n        this.quillEditor.getModule('history').clear()\n      }\n\n      // initialize disabled status based on this.disabled as default value\n      this.setDisabledState()\n\n      this.addQuillEventListeners()\n\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n        return\n      }\n\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged()\n        }\n        this.onEditorCreated.emit(this.quillEditor)\n      })\n    })\n  }\n\n  selectionChangeHandler = (range: Range | null, oldRange: Range | null, source: string) => {\n    const shouldTriggerOnModelTouched = !range && !!this.onModelTouched\n\n    // only emit changes when there's any listener\n    if (!this.onBlur.observers.length &&\n      !this.onFocus.observers.length &&\n      !this.onSelectionChanged.observers.length &&\n      !shouldTriggerOnModelTouched) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (range === null) {\n        this.onBlur.emit({\n          editor: this.quillEditor,\n          source\n        })\n      } else if (oldRange === null) {\n        this.onFocus.emit({\n          editor: this.quillEditor,\n          source\n        })\n      }\n\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (shouldTriggerOnModelTouched) {\n        this.onModelTouched()\n      }\n\n      this.cd.markForCheck()\n    })\n  }\n\n  textChangeHandler = (delta: Delta, oldDelta: Delta, source: string): void => {\n    // only emit changes emitted by user interactions\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = this.defaultEmptyValue\n    }\n\n    const trackChanges = this.trackChanges || this.service.config.trackChanges\n    const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange\n\n    // only emit changes when there's any listener\n    if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (shouldTriggerOnModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n\n      this.cd.markForCheck()\n    })\n  }\n\n  // eslint-disable-next-line max-len\n  editorChangeHandler = (\n    event: 'text-change' | 'selection-change',\n    current: any | Range | null, old: any | Range | null, source: string\n  ): void => {\n    // only emit changes when there's any listener\n    if (!this.onEditorChanged.observers.length) {\n      return\n    }\n\n    // only emit changes emitted by user interactions\n    if (event === 'text-change') {\n      const text = this.quillEditor.getText()\n      const content = this.quillEditor.getContents()\n\n      let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue\n      }\n\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          content,\n          delta: current,\n          editor: this.quillEditor,\n          event,\n          html,\n          oldDelta: old,\n          source,\n          text\n        })\n\n        this.cd.markForCheck()\n      })\n    } else {\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          editor: this.quillEditor,\n          event,\n          oldRange: old,\n          range: current,\n          source\n        })\n\n        this.cd.markForCheck()\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose()\n\n    this.quillSubscription?.unsubscribe()\n    this.quillSubscription = null\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue)\n    }\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder =\n        changes.placeholder.currentValue\n    }\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue =\n        changes.defaultEmptyValue.currentValue\n    }\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue\n      const previousStyling = changes.styles.previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n    }\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue\n      const previousClasses = changes.classes.previousValue\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses)\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses)\n      }\n    }\n    // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n    if (changes.debounceTime) {\n      this.addQuillEventListeners()\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n  }\n\n  addClasses(classList: string): void {\n    QuillEditorBase.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.addClass(this.editorElem, c)\n    })\n  }\n\n  removeClasses(classList: string): void {\n    QuillEditorBase.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.removeClass(this.editorElem, c)\n    })\n  }\n\n  writeValue(currentValue: any) {\n\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return\n    }\n\n    this.content = currentValue\n\n    if (!this.quillEditor) {\n      return\n    }\n\n    const format = getFormat(this.format, this.service.config.format)\n    const newValue = this.valueSetter(this.quillEditor, currentValue)\n\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents()\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return\n      }\n    }\n\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue)\n      } else {\n        this.quillEditor.setContents(newValue)\n      }\n      return\n    }\n    this.quillEditor.setText('')\n\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.onValidatorChanged = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const text = this.quillEditor.getText()\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1)\n    const deltaOperations = this.quillEditor.getContents().ops\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert)\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n\n  private addQuillEventListeners(): void {\n    this.dispose()\n\n    // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription()\n\n      this.subscription.add(\n        // mark model as touched if editor lost focus\n        fromEvent(this.quillEditor, 'selection-change').subscribe(\n          ([range, oldRange, source]) => {\n            this.selectionChangeHandler(range as any, oldRange as any, source)\n          }\n        )\n      )\n\n      // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n      let textChange$ = fromEvent(this.quillEditor, 'text-change')\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change')\n\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime))\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime))\n      }\n\n      this.subscription.add(\n        // update model if text changes\n        textChange$.subscribe(([delta, oldDelta, source]) => {\n          this.textChangeHandler(delta as any, oldDelta as any, source)\n        })\n      )\n\n      this.subscription.add(\n        // triggered if selection or text changed\n        editorChange$.subscribe(([event, current, old, source]) => {\n          this.editorChangeHandler(event as 'text-change' | 'selection-change', current, old, source)\n        })\n      )\n    })\n  }\n\n  private dispose(): void {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe()\n      this.subscription = null\n    }\n  }\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n  styles: [\n    `\n    :host {\n      display: inline-block;\n    }\n    `\n  ]\n})\nexport class QuillEditorComponent extends QuillEditorBase {\n\n  constructor(\n    injector: Injector,\n    @Inject(ElementRef) elementRef: ElementRef,\n    @Inject(ChangeDetectorRef) cd: ChangeDetectorRef,\n    @Inject(DomSanitizer) domSanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) platformId: any,\n    @Inject(Renderer2) renderer: Renderer2,\n    @Inject(NgZone) zone: NgZone,\n    @Inject(QuillService) service: QuillService\n  ) {\n    super(\n      injector,\n      elementRef,\n      cd,\n      domSanitizer,\n      platformId,\n      renderer,\n      zone,\n      service\n    )\n  }\n\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser'\nimport { QuillService } from './quill.service'\n\nimport {\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view-html',\n  styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n  template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n})\nexport class QuillViewHTMLComponent implements OnChanges {\n  @Input() content = ''\n  @Input() theme?: string\n  @Input() sanitize = false\n\n  innerHTML: SafeHtml = ''\n  themeClass = 'ql-snow'\n\n  constructor(\n    @Inject(DomSanitizer) private sanitizer: DomSanitizer,\n    protected service: QuillService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow')\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow'\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    }\n    if (changes.content) {\n      const content = changes.content.currentValue\n      this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content)\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common'\nimport QuillType from 'quill'\nimport { QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  Output,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  NgZone,\n  SecurityContext,\n  OnDestroy\n} from '@angular/core'\nimport { Subscription } from 'rxjs'\n\nimport { CustomOption, CustomModule } from './quill-editor.interfaces'\nimport {getFormat} from './helpers'\nimport { QuillService } from './quill.service'\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view',\n  styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n  template: `\n`\n})\nexport class QuillViewComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() formats?: string[] | null\n  @Input() sanitize = false\n  @Input() strict = true\n  @Input() content: any\n  @Input() customModules: CustomModule[] = []\n  @Input() customOptions: CustomOption[] = []\n  @Input() preserveWhitespace = false\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n\n  quillEditor!: QuillType\n  editorElem!: HTMLElement\n\n  private quillSubscription: Subscription | null = null\n\n  constructor(\n    public elementRef: ElementRef,\n    protected renderer: Renderer2,\n    protected zone: NgZone,\n    protected service: QuillService,\n    protected domSanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) protected platformId: any,\n  ) {}\n\n  valueSetter = (quillEditor: QuillType, value: any): any => {\n    const format = getFormat(this.format, this.service.config.format)\n    let content = value\n    if (format === 'text') {\n      quillEditor.setText(content)\n    } else {\n      if (format === 'html') {\n        if (this.sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n        }\n        content = quillEditor.clipboard.convert(value)\n      } else if (format === 'json') {\n        try {\n          content = JSON.parse(value)\n        } catch (e) {\n          content = [{ insert: value }]\n        }\n      }\n      quillEditor.setContents(content)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.quillEditor) {\n      return\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue)\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      const modules = Object.assign({}, this.modules || this.service.config.modules)\n      modules.toolbar = false\n\n      this.customOptions.forEach((customOption) => {\n        const newCustomOption = Quill.import(customOption.import)\n        newCustomOption.whitelist = customOption.whitelist\n        Quill.register(newCustomOption, true)\n      })\n\n      this.customModules.forEach(({implementation, path}) => {\n        Quill.register(path, implementation)\n      })\n\n      let debug = this.debug\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug\n      }\n\n      let formats = this.formats\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ?\n          Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined)\n      }\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n\n      this.elementRef.nativeElement.insertAdjacentHTML(\n        'afterbegin',\n        this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>'\n      )\n\n      this.editorElem = this.elementRef.nativeElement.querySelector(\n        '[quill-view-element]'\n      ) as HTMLElement\n\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug as any,\n          formats: formats as any,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        })\n      })\n\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view')\n\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content)\n      }\n\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length) {\n        return\n      }\n\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor)\n      })\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.quillSubscription?.unsubscribe()\n    this.quillSubscription = null\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { QuillViewHTMLComponent } from './quill-view-html.component'\nimport { QuillViewComponent } from './quill-view.component'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent,\n    QuillViewComponent,\n    QuillViewHTMLComponent\n  ],\n  exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n  imports: [CommonModule],\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders<QuillModule> {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          useValue: config\n        }\n      ]\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-quill\n */\n\nexport * from './lib/quill.module'\nexport * from './lib/quill.service'\nexport * from './lib/quill-defaults'\nexport * from './lib/quill-editor.component'\nexport * from './lib/quill-view.component'\nexport * from './lib/quill-view-html.component'\nexport * from './lib/quill-editor.interfaces'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;MAAa,cAAc,GAAG;IAC5B,OAAO,EAAE;QACP,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC;QACzC,CAAC,YAAY,EAAE,YAAY,CAAC;QAE5B,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QAC9B,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QACzC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;QACxC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACpC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;QAEtB,CAAC,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;QAC7C,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC;QAEvC;YACE,EAAE,KAAK,EAAE,EAAE,EAAE;YACb,EAAE,UAAU,EAAE,EAAE,EAAE;SACnB;QACD,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QACd,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QAEf,CAAC,OAAO,CAAC;QAET,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;KAC3B;;;ACtBI,MAAM,SAAS,GAAG,CAAC,MAAoB,EAAE,YAA0B;IACxE,MAAM,YAAY,GAAG,MAAM,IAAI,YAAY,CAAA;IAC3C,OAAO,YAAY,IAAI,MAAM,CAAA;AAC/B,CAAC;;MCoEY,kBAAkB,GAAG,IAAI,cAAc,CAAc,QAAQ,EAAE;IAC1E,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;CAC7C;;MCjEY,YAAY;IAmDvB,YACE,QAAkB,EAC6B,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QAjD5D,WAAM,GAAoB,KAAK,CAAC;;YACtC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;;;gBAIf,MAAM,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAA;;;;;;;;;;;gBAWnE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,iCAAiC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAA;gBACnH,MAAM,WAAW,GAAG,MAAM,OAAO,OAAO,CAAC,CAAA;gBACzC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,4BAA4B,CAAA;gBAE7D,IAAI,CAAC,KAAK,IACR,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,GAAG,WAAW,CACjD,CAAA;aACT;;YAGD,MAAA,IAAI,CAAC,MAAM,CAAC,aAAa,0CAAE,OAAO,CAAC,CAAC,YAAY;gBAC9C,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;gBAC9D,eAAe,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAA;gBAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,eAAe,EACf,IAAI,EACJ,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAC1C,CAAA;aACF,CAAC,CAAA;YAEF,MAAA,IAAI,CAAC,MAAM,CAAC,aAAa,0CAAE,OAAO,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE;gBAC1D,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,EACJ,cAAc,EACd,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAC1C,CAAA;aACF,CAAC,CAAA;YAEF,OAAO,IAAI,CAAC,KAAK,CAAA;SAClB,CAAA,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;QAMrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAEtC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,CAAA;SAC1C;KACF;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAA;KACnB;;yGAhEU,YAAY,0CAqDD,kBAAkB;6GArD7B,YAAY,cAFX,MAAM;2FAEP,YAAY;kBAHxB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;8BAsDI,QAAQ;;8BAAI,MAAM;+BAAC,kBAAkB;;;;ACS1C;MACsB,eAAe;IA8DnC,YACE,QAAkB,EACX,UAAsB,EACnB,EAAqB,EACrB,YAA0B,EACL,UAAe,EACpC,QAAmB,EACnB,IAAY,EACZ,OAAqB;QANxB,eAAU,GAAV,UAAU,CAAY;QACnB,OAAE,GAAF,EAAE,CAAmB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QACL,eAAU,GAAV,UAAU,CAAK;QACpC,aAAQ,GAAR,QAAQ,CAAW;QACnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAc;QA7DxB,aAAQ,GAAG,KAAK,CAAA;QAEhB,0BAAqB,GAAqB,KAAK,CAAA;QAC/C,aAAQ,GAAG,KAAK,CAAA;QAChB,WAAM,GAAQ,IAAI,CAAA;QAClB,WAAM,GAAG,IAAI,CAAA;QAGb,kBAAa,GAAmB,EAAE,CAAA;QAClC,kBAAa,GAAmB,EAAE,CAAA;QAElC,uBAAkB,GAAG,KAAK,CAAA;QAE1B,qBAAgB,GAAG,KAAK,CAAA;QAExB,kBAAa,GAAG,KAAK,CAAA;QACrB,eAAU,GAAG,KAAK,CAAA;;;;;;;;;;;;;;QAelB,sBAAiB,GAAS,IAAI,CAAA;QAE7B,oBAAe,GAAsB,IAAI,YAAY,EAAE,CAAA;QACvD,oBAAe,GAA8D,IAAI,YAAY,EAAE,CAAA;QAC/F,qBAAgB,GAAgC,IAAI,YAAY,EAAE,CAAA;QAClE,uBAAkB,GAAkC,IAAI,YAAY,EAAE,CAAA;QACtE,YAAO,GAAwB,IAAI,YAAY,EAAE,CAAA;QACjD,WAAM,GAAuB,IAAI,YAAY,EAAE,CAAA;QAKzD,aAAQ,GAAG,KAAK,CAAA;QAOR,iBAAY,GAAwB,IAAI,CAAA;QACxC,sBAAiB,GAAwB,IAAI,CAAA;QA4BrD,gBAAW,GAAG,CAAC,WAAsB,EAAE,aAA0B;YAC/D,IAAI,IAAI,GAAkB,aAAa,CAAC,aAAa,CAAC,YAAY,CAAE,CAAC,SAAS,CAAA;YAC9E,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,iBAAiB,EAAE;gBACxD,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAA;aAC9B;YACD,IAAI,UAAU,GAA0B,IAAI,CAAA;YAC5C,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAEjE,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,CAAA;aACnC;iBAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;gBAC9B,UAAU,GAAG,WAAW,CAAC,WAAW,EAAE,CAAA;aACvC;iBAAM,IAAI,MAAM,KAAK,MAAM,EAAE;gBAC5B,IAAI;oBACF,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAA;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACV,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,CAAA;iBACnC;aACF;YAED,OAAO,UAAU,CAAA;SAClB,CAAA;QAGD,gBAAW,GAAG,CAAC,WAAsB,EAAE,KAAU;YAC/C,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YACjE,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;iBAChE;gBACD,OAAO,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aAC5C;iBAAM,IAAI,MAAM,KAAK,MAAM,EAAE;gBAC5B,IAAI;oBACF,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;iBACzB;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;iBAC3B;aACF;YAED,OAAO,KAAK,CAAA;SACb,CAAA;QAqJD,2BAAsB,GAAG,CAAC,KAAmB,EAAE,QAAsB,EAAE,MAAc;YACnF,MAAM,2BAA2B,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAA;;YAGnE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;gBAC/B,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM;gBAC9B,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM;gBACzC,CAAC,2BAA2B,EAAE;gBAC9B,OAAM;aACP;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,KAAK,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,MAAM,EAAE,IAAI,CAAC,WAAW;wBACxB,MAAM;qBACP,CAAC,CAAA;iBACH;qBAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;oBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBAChB,MAAM,EAAE,IAAI,CAAC,WAAW;wBACxB,MAAM;qBACP,CAAC,CAAA;iBACH;gBAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;oBAC3B,MAAM,EAAE,IAAI,CAAC,WAAW;oBACxB,QAAQ;oBACR,KAAK;oBACL,MAAM;iBACP,CAAC,CAAA;gBAEF,IAAI,2BAA2B,EAAE;oBAC/B,IAAI,CAAC,cAAc,EAAE,CAAA;iBACtB;gBAED,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA;aACvB,CAAC,CAAA;SACH,CAAA;QAED,sBAAiB,GAAG,CAAC,KAAY,EAAE,QAAe,EAAE,MAAc;;YAEhE,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;YACvC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAA;YAE9C,IAAI,IAAI,GAAkB,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,YAAY,CAAE,CAAC,SAAS,CAAA;YACjF,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,iBAAiB,EAAE;gBACxD,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAA;aAC9B;YAED,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAA;YAC1E,MAAM,0BAA0B,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,YAAY,IAAI,YAAY,KAAK,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,aAAa,CAAA;;YAGxH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,0BAA0B,EAAE;gBAC1E,OAAM;aACP;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,0BAA0B,EAAE;oBAC9B,IAAI,CAAC,aAAa,CAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAW,CAAC,CACrD,CAAA;iBACF;gBAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBACzB,OAAO;oBACP,KAAK;oBACL,MAAM,EAAE,IAAI,CAAC,WAAW;oBACxB,IAAI;oBACJ,QAAQ;oBACR,MAAM;oBACN,IAAI;iBACL,CAAC,CAAA;gBAEF,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA;aACvB,CAAC,CAAA;SACH,CAAA;;QAGD,wBAAmB,GAAG,CACpB,KAAyC,EACzC,OAA2B,EAAE,GAAuB,EAAE,MAAc;;YAGpE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC1C,OAAM;aACP;;YAGD,IAAI,KAAK,KAAK,aAAa,EAAE;gBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;gBACvC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAA;gBAE9C,IAAI,IAAI,GAAkB,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,YAAY,CAAE,CAAC,SAAS,CAAA;gBACjF,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,iBAAiB,EAAE;oBACxD,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAA;iBAC9B;gBAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;wBACxB,OAAO;wBACP,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,IAAI,CAAC,WAAW;wBACxB,KAAK;wBACL,IAAI;wBACJ,QAAQ,EAAE,GAAG;wBACb,MAAM;wBACN,IAAI;qBACL,CAAC,CAAA;oBAEF,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA;iBACvB,CAAC,CAAA;aACH;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;wBACxB,MAAM,EAAE,IAAI,CAAC,WAAW;wBACxB,KAAK;wBACL,QAAQ,EAAE,GAAG;wBACb,KAAK,EAAE,OAAO;wBACd,MAAM;qBACP,CAAC,CAAA;oBAEF,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA;iBACvB,CAAC,CAAA;aACH;SACF,CAAA;QA1UC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;KACvC;IAED,OAAO,mBAAmB,CAAC,OAAe;QACxC,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC3C,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,IAAc,EAAE,GAAW;YAClD,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAA;YAC1B,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACnB;YAED,OAAO,IAAI,CAAA;SACZ,EAAE,EAAE,CAAC,CAAA;KACP;IA6CD,eAAe;QACb,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACrC,OAAM;SACP;;;;QAMD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK;YAC9D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAC9C,IAAI,CAAC,qBAAqB,KAAK,KAAK,GAAG,WAAW,GAAG,YAAY,EACjE,IAAI,CAAC,kBAAkB,GAAG,kCAAkC,GAAG,kCAAkC,CAClG,CAAA;YAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAC3D,wBAAwB,CACzB,CAAA;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAC7D,wBAAwB,CACzB,CAAA;YACD,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;YAE9E,IAAI,WAAW,EAAE;gBACf,OAAO,CAAC,OAAO,GAAG,WAAW,CAAA;aAC9B;iBAAM,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;gBACxC,OAAO,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAA;aACzC;YAED,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,KAAK,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAA;YACrG,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,WAAW,GAAG,sBAAsB,CAAA;aACrC;YAED,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW;oBAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;iBAC/D,CAAC,CAAA;aACH;YAED,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aAC9B;YAED,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY;gBACtC,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;gBACzD,eAAe,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAA;gBAClD,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;aACtC,CAAC,CAAA;YAEF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE;gBAClD,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;aACrC,CAAC,CAAA;YAEF,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAA;YAClF,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA;aACtF;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;YACtB,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC1D,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAA;aAClC;YAED,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;YAC5B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;gBACxC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAA;aAC7F;YAED,IAAI,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAA;YAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,EAAE;gBAC3D,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAA;aAC1D;YAED,IAAI,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAA;YAChD,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;gBAC3D,kBAAkB;oBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,KAAK,IAAI;2BAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAA;aAC9F;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YAC1B,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,SAAS,EAAE;gBACrC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC,CAAA;aACrI;YAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;;gBAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;oBAC5C,MAAM;oBACN,KAAK,EAAE,KAAY;oBACnB,OAAO,EAAE,OAAc;oBACvB,OAAO;oBACP,WAAW;oBACX,QAAQ;oBACR,iBAAiB;oBACjB,kBAAkB,EAAE,kBAAyB;oBAC7C,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,KAAK,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;iBACtF,CAAC,CAAA;;gBAGF,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,MAAM,OAAO,GAAI,MAAA,MAAA,IAAI,CAAC,WAAmB,0CAAE,KAAK,0CAAE,OAAO,CAAA;oBACzD,MAAM,KAAK,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,0CAAE,aAAa,CAAC,kBAAkB,CAAC,CAAA;oBAC9D,IAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,EAAE;wBAClB,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAA;qBAC1C;iBACF;aACF,CAAC,CAAA;YAEF,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;gBAEjE,IAAI,MAAM,KAAK,MAAM,EAAE;oBACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;iBACjD;qBAAM;oBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;oBACjE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;iBACjD;gBAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAA;aAC9C;;YAGD,IAAI,CAAC,gBAAgB,EAAE,CAAA;YAEvB,IAAI,CAAC,sBAAsB,EAAE,CAAA;;;YAI7B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBACtE,OAAM;aACP;;;;YAKD,qBAAqB,CAAC;gBACpB,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAA;iBAC1B;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;aAC5C,CAAC,CAAA;SACH,CAAC,CAAA;KACH;IAiID,WAAW;;QACT,IAAI,CAAC,OAAO,EAAE,CAAA;QAEd,MAAA,IAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAA;QACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;KAC9B;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAM;SACP;;QAED,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;SACxD;QACD,IAAI,OAAO,CAAC,WAAW,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW;gBACvC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAA;SACnC;QACD,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB;gBAC7C,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAA;SACzC;QACD,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAA;YAClD,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,aAAa,CAAA;YAEpD,IAAI,eAAe,EAAE;gBACnB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW;oBAC/C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;iBAChD,CAAC,CAAA;aACH;YACD,IAAI,cAAc,EAAE;gBAClB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW;oBAC9C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;iBAC/D,CAAC,CAAA;aACH;SACF;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAA;YACnD,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAA;YAErD,IAAI,eAAe,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAA;aACpC;YAED,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAA;aAChC;SACF;;;QAGD,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,sBAAsB,EAAE,CAAA;SAC9B;;KAEF;IAED,UAAU,CAAC,SAAiB;QAC1B,eAAe,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS;YAC/D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;SAC3C,CAAC,CAAA;KACH;IAED,aAAa,CAAC,SAAiB;QAC7B,eAAe,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS;YAC/D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;SAC9C,CAAC,CAAA;KACH;IAED,UAAU,CAAC,YAAiB;;QAG1B,IAAI,IAAI,CAAC,UAAU,IAAI,YAAY,KAAK,IAAI,EAAE;YAC5C,OAAM;SACP;QAED,IAAI,CAAC,OAAO,GAAG,YAAY,CAAA;QAE3B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAM;SACP;QAED,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QACjE,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAA;QAEjE,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAA;YACzD,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACnE,OAAM;aACP;SACF;QAED,IAAI,YAAY,EAAE;YAChB,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;aACvC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;aACvC;YACD,OAAM;SACP;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;KAE7B;IAED,gBAAgB,CAAC,aAAsB,IAAI,CAAC,QAAQ;;QAElD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAA;QAC1B,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;gBAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;aAClF;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAA;iBAC1B;gBACD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;aACzE;SACF;KACF;IAED,gBAAgB,CAAC,EAA6B;QAC5C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAA;KACxB;IAED,iBAAiB,CAAC,EAAc;QAC9B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA;KACzB;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAA;KAC7B;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,GAAG,GAUL,EAAE,CAAA;QACN,IAAI,KAAK,GAAG,IAAI,CAAA;QAEhB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;;QAEvC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QACrI,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,GAAG,CAAA;QAC1D,MAAM,kBAAkB,GAAG,eAAe,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QAE5H,IAAI,IAAI,CAAC,SAAS,IAAI,UAAU,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;YAC/D,GAAG,CAAC,cAAc,GAAG;gBACnB,KAAK,EAAE,UAAU;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAA;YAED,KAAK,GAAG,KAAK,CAAA;SACd;QAED,IAAI,IAAI,CAAC,SAAS,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;YACjD,GAAG,CAAC,cAAc,GAAG;gBACnB,KAAK,EAAE,UAAU;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAA;YAED,KAAK,GAAG,KAAK,CAAA;SACd;QAED,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,kBAAkB,EAAE;YACtD,GAAG,CAAC,aAAa,GAAG;gBAClB,KAAK,EAAE,IAAI;aACZ,CAAA;YAED,KAAK,GAAG,KAAK,CAAA;SACd;QAED,OAAO,KAAK,GAAG,IAAI,GAAG,GAAG,CAAA;KAC1B;IAEO,sBAAsB;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAA;;;;QAKd,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAA;YAEtC,IAAI,CAAC,YAAY,CAAC,GAAG;;YAEnB,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,SAAS,CACvD,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;gBACxB,IAAI,CAAC,sBAAsB,CAAC,KAAY,EAAE,QAAe,EAAE,MAAM,CAAC,CAAA;aACnE,CACF,CACF,CAAA;;;YAID,IAAI,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAA;YAC5D,IAAI,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,eAAe,CAAC,CAAA;YAEhE,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;gBACzC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAA;gBAC/D,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAA;aACpE;YAED,IAAI,CAAC,YAAY,CAAC,GAAG;;YAEnB,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;gBAC9C,IAAI,CAAC,iBAAiB,CAAC,KAAY,EAAE,QAAe,EAAE,MAAM,CAAC,CAAA;aAC9D,CAAC,CACH,CAAA;YAED,IAAI,CAAC,YAAY,CAAC,GAAG;;YAEnB,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;gBACpD,IAAI,CAAC,mBAAmB,CAAC,KAA2C,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,CAAA;aAC5F,CAAC,CACH,CAAA;SACF,CAAC,CAAA;KACH;IAEO,OAAO;QACb,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAA;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;SACzB;KACF;;4GA/nBmB,eAAe,iIAmEzB,WAAW;gGAnED,eAAe;2FAAf,eAAe;kBAFpC,SAAS;;;8BAqEL,MAAM;+BAAC,WAAW;;yBAlEZ,MAAM;sBAAd,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,WAAW;sBAAnB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,qBAAqB;sBAA7B,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,kBAAkB;sBAA1B,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,YAAY;sBAApB,KAAK;gBACG,kBAAkB;sBAA1B,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,gBAAgB;sBAAxB,KAAK;gBACG,eAAe;sBAAvB,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,YAAY;sBAApB,KAAK;gBAcG,iBAAiB;sBAAzB,KAAK;gBAEI,eAAe;sBAAxB,MAAM;gBACG,eAAe;sBAAxB,MAAM;gBACG,gBAAgB;sBAAzB,MAAM;gBACG,kBAAkB;sBAA3B,MAAM;gBACG,OAAO;sBAAhB,MAAM;gBACG,MAAM;sBAAf,MAAM;gBAyCP,WAAW;sBADV,KAAK;gBAyBN,WAAW;sBADV,KAAK;;MA+iBK,6BAA6B,eAAe;IAEvD,YACE,QAAkB,EACE,UAAsB,EACf,EAAqB,EAC1B,YAA0B,EAC3B,UAAe,EACjB,QAAmB,EACtB,IAAY,EACN,OAAqB;QAE3C,KAAK,CACH,QAAQ,EACR,UAAU,EACV,EAAE,EACF,YAAY,EACZ,UAAU,EACV,QAAQ,EACR,IAAI,EACJ,OAAO,CACR,CAAA;KACF;;iHAtBU,oBAAoB,0CAIrB,UAAU,aACV,iBAAiB,aACjB,YAAY,aACZ,WAAW,aACX,SAAS,aACT,MAAM,aACN,YAAY;qGAVX,oBAAoB,uCA1BpB;QACT;YACE,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,iBAAiB;;YAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,oBAAoB,CAAC;SACpD;QACD;YACE,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,aAAa;;YAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,oBAAoB,CAAC;SACpD;KACF,iDAES;;CAEX;2FASY,oBAAoB;kBA5BhC,SAAS;mBAAC;oBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,SAAS,EAAE;wBACT;4BACE,KAAK,EAAE,IAAI;4BACX,OAAO,EAAE,iBAAiB;;4BAE1B,WAAW,EAAE,UAAU,CAAC,0BAA0B,CAAC;yBACpD;wBACD;4BACE,KAAK,EAAE,IAAI;4BACX,OAAO,EAAE,aAAa;;4BAEtB,WAAW,EAAE,UAAU,CAAC,0BAA0B,CAAC;yBACpD;qBACF;oBACD,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE;;CAEX;oBACC,MAAM,EAAE;wBACN;;;;KAIC;qBACF;iBACF;;;8BAKI,MAAM;+BAAC,UAAU;;8BACjB,MAAM;+BAAC,iBAAiB;;8BACxB,MAAM;+BAAC,YAAY;;8BACnB,MAAM;+BAAC,WAAW;;8BAClB,MAAM;+BAAC,SAAS;;8BAChB,MAAM;+BAAC,MAAM;;8BACb,MAAM;+BAAC,YAAY;;;;MCvtBX,sBAAsB;IAQjC,YACgC,SAAuB,EAC3C,OAAqB;QADD,cAAS,GAAT,SAAS,CAAc;QAC3C,YAAO,GAAP,OAAO,CAAc;QATxB,YAAO,GAAG,EAAE,CAAA;QAEZ,aAAQ,GAAG,KAAK,CAAA;QAEzB,cAAS,GAAa,EAAE,CAAA;QACxB,eAAU,GAAG,SAAS,CAAA;KAKlB;IAEJ,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,CAAA;YAC5G,IAAI,CAAC,UAAU,GAAG,MAAM,KAAK,sBAAsB,CAAA;SACpD;aAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAA;YAC5E,IAAI,CAAC,UAAU,GAAG,MAAM,KAAK,sBAAsB,CAAA;SACpD;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAA;YAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAA;SAC3F;KACF;;mHAzBU,sBAAsB,kBASvB,YAAY;uGATX,sBAAsB,kJAPvB;;;;;CAKX;2FAEY,sBAAsB;kBAflC,SAAS;mBAAC;oBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,iBAAiB;oBAC3B,MAAM,EAAE,CAAC;;;;CAIV,CAAC;oBACA,QAAQ,EAAE;;;;;CAKX;iBACA;;;8BAUI,MAAM;+BAAC,YAAY;;yBARb,OAAO;sBAAf,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,QAAQ;sBAAhB,KAAK;;;MCSK,kBAAkB;IAoB7B,YACS,UAAsB,EACnB,QAAmB,EACnB,IAAY,EACZ,OAAqB,EACrB,YAA0B,EACL,UAAe;QALvC,eAAU,GAAV,UAAU,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAc;QACrB,iBAAY,GAAZ,YAAY,CAAc;QACL,eAAU,GAAV,UAAU,CAAK;QApBvC,aAAQ,GAAG,KAAK,CAAA;QAChB,WAAM,GAAG,IAAI,CAAA;QAEb,kBAAa,GAAmB,EAAE,CAAA;QAClC,kBAAa,GAAmB,EAAE,CAAA;QAClC,uBAAkB,GAAG,KAAK,CAAA;QAEzB,oBAAe,GAAsB,IAAI,YAAY,EAAE,CAAA;QAKzD,sBAAiB,GAAwB,IAAI,CAAA;QAWrD,gBAAW,GAAG,CAAC,WAAsB,EAAE,KAAU;YAC/C,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YACjE,IAAI,OAAO,GAAG,KAAK,CAAA;YACnB,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;aAC7B;iBAAM;gBACL,IAAI,MAAM,KAAK,MAAM,EAAE;oBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjB,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;qBAChE;oBACD,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;iBAC/C;qBAAM,IAAI,MAAM,KAAK,MAAM,EAAE;oBAC5B,IAAI;wBACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;qBAC5B;oBAAC,OAAO,CAAC,EAAE;wBACV,OAAO,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;qBAC9B;iBACF;gBACD,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;aACjC;SACF,CAAA;KAtBG;IAwBJ,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAM;SACP;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;SACjE;KACF;IAED,eAAe;QACb,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACrC,OAAM;SACP;;QAGD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK;YAC9D,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;YAC9E,OAAO,CAAC,OAAO,GAAG,KAAK,CAAA;YAEvB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY;gBACtC,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;gBACzD,eAAe,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAA;gBAClD,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;aACtC,CAAC,CAAA;YAEF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAC,cAAc,EAAE,IAAI,EAAC;gBAChD,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;aACrC,CAAC,CAAA;YAEF,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;YACtB,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC1D,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAA;aAClC;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YAC1B,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,SAAS,EAAE;gBACrC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO;oBACnC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC,CAAA;aAC7G;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,CAAA;YAE5F,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAC9C,YAAY,EACZ,IAAI,CAAC,kBAAkB,GAAG,gCAAgC,GAAG,gCAAgC,CAC9F,CAAA;YAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAC3D,sBAAsB,CACR,CAAA;YAEhB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;oBAC5C,KAAK,EAAE,KAAY;oBACnB,OAAO,EAAE,OAAc;oBACvB,OAAO;oBACP,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,KAAK;iBACN,CAAC,CAAA;aACH,CAAC,CAAA;YAEF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAA;YAEzD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;aACjD;;;YAID,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC1C,OAAM;aACP;;;;YAKD,qBAAqB,CAAC;gBACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;aAC5C,CAAC,CAAA;SACH,CAAC,CAAA;KACH;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAA;QACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;KAC9B;;+GAxIU,kBAAkB,gJA0BnB,WAAW;mGA1BV,kBAAkB,oYAHnB;CACX;2FAEY,kBAAkB;kBAX9B,SAAS;mBAAC;oBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,YAAY;oBACtB,MAAM,EAAE,CAAC;;;;CAIV,CAAC;oBACA,QAAQ,EAAE;CACX;iBACA;;;8BA2BI,MAAM;+BAAC,WAAW;;yBAzBZ,MAAM;sBAAd,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,kBAAkB;sBAA1B,KAAK;gBAEI,eAAe;sBAAxB,MAAM;;;MCnCI,WAAW;IACtB,OAAO,OAAO,CAAC,MAAoB;QACjC,OAAO;YACL,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,kBAAkB;oBAC3B,QAAQ,EAAE,MAAM;iBACjB;aACF;SACF,CAAA;KACF;;wGAXU,WAAW;yGAAX,WAAW,iBAPpB,oBAAoB;QACpB,kBAAkB;QAClB,sBAAsB,aAGd,YAAY,aADZ,oBAAoB,EAAE,kBAAkB,EAAE,sBAAsB;yGAG/D,WAAW,YAFb,CAAC,YAAY,CAAC;2FAEZ,WAAW;kBATvB,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,oBAAoB;wBACpB,kBAAkB;wBAClB,sBAAsB;qBACvB;oBACD,OAAO,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,EAAE,sBAAsB,CAAC;oBAC3E,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB;;;AChBD;;;;ACAA;;;;;;"}